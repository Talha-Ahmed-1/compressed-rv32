;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit CompressedDecoder : 
  module CompressedDecoder : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip instIn : UInt<32>, instOut : UInt<32>, compressed : UInt<1>}
    
    node _RS1_T = bits(io.instIn, 4, 2) @[CompressedDecoder.scala 50:33]
    node _RS1_T_1 = add(_RS1_T, UInt<4>("h08")) @[CompressedDecoder.scala 50:39]
    node _RS1_T_2 = tail(_RS1_T_1, 1) @[CompressedDecoder.scala 50:39]
    wire RS1 : UInt
    RS1 <= _RS1_T_2
    node _RD_RS2_T = bits(io.instIn, 9, 7) @[CompressedDecoder.scala 51:36]
    node _RD_RS2_T_1 = add(_RD_RS2_T, UInt<4>("h08")) @[CompressedDecoder.scala 51:42]
    node _RD_RS2_T_2 = tail(_RD_RS2_T_1, 1) @[CompressedDecoder.scala 51:42]
    wire RD_RS2 : UInt
    RD_RS2 <= _RD_RS2_T_2
    node _T = bits(io.instIn, 15, 0) @[CompressedDecoder.scala 80:19]
    node _T_1 = and(_T, UInt<16>("h0fc63")) @[CompressedDecoder.scala 80:26]
    node _T_2 = eq(UInt<16>("h08c61"), _T_1) @[CompressedDecoder.scala 80:26]
    node lo_hi = cat(UInt<3>("h07"), RD_RS2) @[Cat.scala 30:58]
    node lo = cat(lo_hi, UInt<6>("h033")) @[Cat.scala 30:58]
    node hi_hi = cat(UInt<1>("h00"), RD_RS2) @[Cat.scala 30:58]
    node hi = cat(hi_hi, RS1) @[Cat.scala 30:58]
    node _T_3 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_4 = bits(io.instIn, 15, 0) @[CompressedDecoder.scala 81:19]
    node _T_5 = and(_T_4, UInt<16>("h0fc63")) @[CompressedDecoder.scala 81:26]
    node _T_6 = eq(UInt<16>("h08c41"), _T_5) @[CompressedDecoder.scala 81:26]
    node lo_hi_1 = cat(UInt<3>("h06"), RD_RS2) @[Cat.scala 30:58]
    node lo_1 = cat(lo_hi_1, UInt<6>("h033")) @[Cat.scala 30:58]
    node hi_hi_1 = cat(UInt<1>("h00"), RD_RS2) @[Cat.scala 30:58]
    node hi_1 = cat(hi_hi_1, RS1) @[Cat.scala 30:58]
    node _T_7 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_8 = bits(io.instIn, 15, 0) @[CompressedDecoder.scala 82:19]
    node _T_9 = and(_T_8, UInt<16>("h0fc63")) @[CompressedDecoder.scala 82:26]
    node _T_10 = eq(UInt<16>("h08c21"), _T_9) @[CompressedDecoder.scala 82:26]
    node lo_hi_2 = cat(UInt<3>("h04"), RD_RS2) @[Cat.scala 30:58]
    node lo_2 = cat(lo_hi_2, UInt<6>("h033")) @[Cat.scala 30:58]
    node hi_hi_2 = cat(UInt<1>("h00"), RD_RS2) @[Cat.scala 30:58]
    node hi_2 = cat(hi_hi_2, RS1) @[Cat.scala 30:58]
    node _T_11 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    node _T_12 = bits(io.instIn, 15, 0) @[CompressedDecoder.scala 83:19]
    node _T_13 = and(_T_12, UInt<16>("h0fc63")) @[CompressedDecoder.scala 83:26]
    node _T_14 = eq(UInt<16>("h08c01"), _T_13) @[CompressedDecoder.scala 83:26]
    node lo_hi_3 = cat(UInt<1>("h00"), RD_RS2) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_3, UInt<6>("h033")) @[Cat.scala 30:58]
    node hi_hi_3 = cat(UInt<6>("h020"), RD_RS2) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_3, RS1) @[Cat.scala 30:58]
    node _T_15 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_16 = bits(io.instIn, 15, 0) @[CompressedDecoder.scala 84:19]
    node _T_17 = and(_T_16, UInt<16>("h0ffff")) @[CompressedDecoder.scala 84:26]
    node _T_18 = eq(UInt<1>("h01"), _T_17) @[CompressedDecoder.scala 84:26]
    node _T_19 = bits(io.instIn, 15, 0) @[CompressedDecoder.scala 85:19]
    node _T_20 = and(_T_19, UInt<16>("h0ffff")) @[CompressedDecoder.scala 85:26]
    node _T_21 = eq(UInt<16>("h09002"), _T_20) @[CompressedDecoder.scala 85:26]
    node _T_22 = bits(io.instIn, 15, 0) @[CompressedDecoder.scala 86:19]
    node _T_23 = and(_T_22, UInt<16>("h0ffff")) @[CompressedDecoder.scala 86:26]
    node _T_24 = eq(UInt<1>("h00"), _T_23) @[CompressedDecoder.scala 86:26]
    node _io_instOut_T = mux(_T_24, UInt<1>("h00"), io.instIn) @[Mux.scala 98:16]
    node _io_instOut_T_1 = mux(_T_21, UInt<5>("h013"), _io_instOut_T) @[Mux.scala 98:16]
    node _io_instOut_T_2 = mux(_T_18, UInt<5>("h013"), _io_instOut_T_1) @[Mux.scala 98:16]
    node _io_instOut_T_3 = mux(_T_14, _T_15, _io_instOut_T_2) @[Mux.scala 98:16]
    node _io_instOut_T_4 = mux(_T_10, _T_11, _io_instOut_T_3) @[Mux.scala 98:16]
    node _io_instOut_T_5 = mux(_T_6, _T_7, _io_instOut_T_4) @[Mux.scala 98:16]
    node _io_instOut_T_6 = mux(_T_2, _T_3, _io_instOut_T_5) @[Mux.scala 98:16]
    io.instOut <= _io_instOut_T_6 @[CompressedDecoder.scala 88:16]
    io.compressed <= UInt<1>("h01") @[CompressedDecoder.scala 89:19]
    
